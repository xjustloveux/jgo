name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js Environment
      uses: actions/setup-node@v3.3.0
      with:
        node-version: '18'

    - name: Setup Go Environment
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Go Get
      run: go get -v
      
    - name: Go Build
      run: go build -v ./...

    - name: Copy And Replace Secrets
      run: |
        mv ./files/test/mod ./go.mod
        mv ./files/test/sum ./go.sum
        mv ./files/test/jsql/jsql_test ./jsql/jsql_test.go
        sed -i 's/MYSQL_DSN/${{ secrets.MYSQL_DSN }}/g' ./files/test-jconf.json
        sed -i 's/MYSQL_DB/${{ secrets.MYSQL_DB }}/g' ./files/test-jconf.json
        sed -i 's/MSSQL_DSN/${{ secrets.MSSQL_DSN }}/g' ./files/test-jconf.json
        sed -i 's/MSSQL_DB/${{ secrets.MSSQL_DB }}/g' ./files/test-jconf.json
        sed -i 's/ORACLE_DSN/${{ secrets.ORACLE_DSN }}/g' ./files/test-jconf.json
        sed -i 's/ORACLE_DB/${{ secrets.ORACLE_DB }}/g' ./files/test-jconf.json
        sed -i 's/POSTGRESQL_DSN/${{ secrets.POSTGRESQL_DSN }}/g' ./files/test-jconf.json
        sed -i 's/POSTGRESQL_DB/${{ secrets.POSTGRESQL_DB }}/g' ./files/test-jconf.json

    - name: Install Oracle
      run: |
        mkdir -p /opt/oracle
        cd /opt/oracle
        wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip
        unzip instantclient-basic-linux.x64-21.8.0.0.0dbru.zip
        sudo apt-get install libaio1
        sudo sh -c "echo /opt/oracle/instantclient_21_8 > /etc/ld.so.conf.d/oracle-instantclient.conf"
        export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_8:$LD_LIBRARY_PATH
        sudo ldconfig

    - name: Install Time Zone
      run: sudo apt-get install tzdata

    - name: Go Get
      run: go get -v

    - name: Go Test
      run: go test -v ./... -covermode=count -coverprofile=coverage.out

    - name: Upload Coverage To Codecov
      run: bash <(curl -s https://codecov.io/bash)
