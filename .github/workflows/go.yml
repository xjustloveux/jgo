name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v3.3.0
      with:
        node-version: '18'

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Get
      run: go get -v
      
    - name: Build
      run: go build -v ./...

    - name: Copy And Replace
      run: |
        mv ./files/test/mod ./go.mod
        mv ./files/test/sum ./go.sum
        mv ./files/test/jsql/jsql_test ./jsql/jsql_test.go
        sed -i 's/MYSQL_DSN/${{ secrets.MYSQL_DSN }}/g' ./files/test-jconf.json
        sed -i 's/MYSQL_DB/${{ secrets.MYSQL_DB }}/g' ./files/test-jconf.json
        sed -i 's/MSSQL_DSN/${{ secrets.MSSQL_DSN }}/g' ./files/test-jconf.json
        sed -i 's/MSSQL_DB/${{ secrets.MSSQL_DB }}/g' ./files/test-jconf.json
        sed -i 's/ORACLE_DSN/${{ secrets.ORACLE_DSN }}/g' ./files/test-jconf.json
        sed -i 's/ORACLE_DB/${{ secrets.ORACLE_DB }}/g' ./files/test-jconf.json
        sed -i 's/POSTGRESQL_DSN/${{ secrets.POSTGRESQL_DSN }}/g' ./files/test-jconf.json
        sed -i 's/POSTGRESQL_DB/${{ secrets.POSTGRESQL_DB }}/g' ./files/test-jconf.json

    - name: Install Oracle
      run: |
        mkdir -p /opt/oracle
        cd /opt/oracle
        wget https://download.oracle.com/otn_software/linux/instantclient/instantclient-basic-linuxx64.zip
        unzip instantclient-basic-linuxx64.zip
        sudo sh -c "echo /opt/oracle/instantclient_19_11 > /etc/ld.so.conf.d/oracle-instantclient.conf"
        sudo ldconfig
        export LD_LIBRARY_PATH=/opt/oracle/instantclient_19_11:$LD_LIBRARY_PATH

    - name: Get
      run: go get -v

    - name: Test
      run: go test -v ./... -covermode=count -coverprofile=coverage.out

    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash)
